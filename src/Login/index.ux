<template>
  <!-- template里只能有一个根节点 -->
  <div class="demo-page">
    <text class="title">欢迎</text>
    <!-- 点击跳转详情页 -->
    <input class="input" value="{{userName}}" placeholder="输入登录账号" onchange="accountChange" />
    <input class="input" type="password" value="{{password}}" placeholder="输入登录密码" onchange="passwdChange" />
    <input class="btn" type="button" value="登录" onclick="doLogin" />
    <div class="help-container">
      <a class="href-txt" onclick="goRegister">注册</a>
    </div>
  </div>
</template>

<style>
  .demo-page {
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .title {
    font-size: 40px;
    text-align: center;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }

  .input {
    width: 550px;
    height: 86px;
    margin-top: 40px;
    padding-left: 30px;
    padding-right: 30px;
    border-radius: 43px;
    background-color: gainsboro;
    font-size: 30px;
    color: #000000;
  }

  .help-container {
    margin-top: 30px;
    flex-direction: row;
    width: 80%;
    padding: 30px;
    justify-content: flex-end;
  }

  .href-txt {
    color: blue;
  }
</style>

<script>
  import router from '@system.router'
  import prompt from '@system.prompt'
  import fetch from '@system.fetch'
  import storage from '@system.storage'

  export default {
    protected: {
      regUserName: null
    },
    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
    private: {
      userName: '',
      password: ''
    },
    onInit() {
      if (this.regUserName) {
        this.userName = this.regUserName
      }
    },
    routeDetail() {
      // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
      router.push({
        uri: '/DemoDetail'
      })
    },
    accountChange(e) {
      this.userName = e.text
    },
    passwdChange(e) {
      this.password = e.text
    },
    doLogin() {
      if (!this.userName || !this.password) {
        prompt.showToast({
          message: "账号/密码不可为空"
        })
      }
      var that = this
      fetch.fetch({
        url: 'http://192.168.30.41:5000/signin',
        method: 'POST',
        data: {
          "username": this.userName,
          "password": this.password
        },
        success: function (response) {
          if (response) {
            const res = JSON.parse(response.data)
            if (res.code === 0) {
              storage.set({
                key: 'userInfo',
                value: JSON.stringify({isLogin:true,userId:res.userID,username:res.userName}),
                success: function (data) {
                  that.$app.$data.userId = res.userID
                  router.push({
                    uri: '/Home'
                  })
                },
                fail: function (data, code) {
                  console.log(`handling fail, code = ${code}`)
                }
              })
              prompt.showToast({
                message: res.msg
              })
            } else {
              prompt.showToast({
                message: res.msg
              })
            }
          }
        },
        fail: function (err, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    },
    goRegister() {
      router.push({
        uri: '/Register'
      })
    }
  }
</script>